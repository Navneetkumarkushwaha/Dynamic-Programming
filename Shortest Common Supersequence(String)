class Solution:
    def shortestCommonSupersequence(self, str1: str, str2: str) -> str:
        
        m = len(str1)
        n = len(str2) 
        
        # construct the dp table
        
        t = [[0 for j in range(n + 1)] for i in range(m + 1)]
        
        for i in range(1, m+1):
            for j in range(1, n+1):
                if str1[i-1] == str2[j-1]:
                    t[i][j] = 1 + t[i-1][j-1]
                else:
                    t[i][j] = max(t[i-1][j], t[i][j-1])
            
            

        i = len(str1)
        j = len(str2)
        
        string = ''
        
        while i>0 and j>0:
            if str1[i-1] == str2[j-1]:
                string += str1[i-1]
                i -= 1
                j -= 1
            else:
                if t[i][j-1] > t[i-1][j]:
                    string += str2[j-1]
                    j -= 1
                else:
                    string += str1[i-1]
                    i -= 1
        
        # if str1 is remaining
        while i>0:
            string += str1[i-1]
            i -= 1
        
        # if str2 is remaining
        while j>0:
            string += str2[j-1]
            j -= 1
        
        return string[::-1]
                            
                    
            
        
