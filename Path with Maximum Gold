class Solution:
    def recursion(self,i,j,grid):
        if (i<0 or j<0 or i==len(grid) or j==len(grid[0]) or grid[i][j]==0):
            return 0
        
        current=grid[i][j]
        grid[i][j]=0
        ans=current
        ans1=0
        ans1=max(ans1,self.recursion(i-1,j,grid))
        ans1=max(ans1,self.recursion(i+1,j,grid))
        ans1=max(ans1,self.recursion(i,j-1,grid))
        ans1=max(ans1,self.recursion(i,j+1,grid))
        ans+=ans1
        grid[i][j]=current
        
        return ans
    def getMaximumGold(self, grid: List[List[int]]) -> int:
        ans=0
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j]!=0:
                    ans=max(ans,self.recursion(i,j,grid))
        return ans
        
        
